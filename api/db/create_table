-- Opis tabel w bazie danych 

CREATE TABLE IF NOT EXISTS addresses (
    id SERIAL PRIMARY KEY,
    street VARCHAR(255) NOT NULL,
    street_number VARCHAR(50) NOT NULL,
    apartament_number VARCHAR(50),
    city VARCHAR(100) NOT NULL,
    post_code VARCHAR(10) NOT NULL,
    country VARCHAR(100) NOT NULL
);

-- poniewaz zakladamy, ze w przyszlosci aplikacja będzie miała dostęp do mObywatela,
--  tej wersji wystarczy posiadać informacje o danych dokumentu

CREATE TABLE IF NOT EXISTS documents (
    id SERIAL PRIMARY KEY,
    document_number VARCHAR(50) UNIQUE NOT NULL,
    document_type VARCHAR(50) NOT NULL,
    issue_date DATE NOT NULL,
    expiry DATE NOT NULL
);

-- poniewaz logowane jest dwuetapowe, na początku będziemy uzupelniac tylko
-- pesel, email, pwd, firstname, surname
-- address_id i document_id beda uzupelnione juz pozniej na profilu 


CREATE TABLE IF NOT EXISTS users (
    id SERIAL PRIMARY KEY, 
    pesel varchar(11) UNIQUE NOT NULL, 
    email varchar(255) NOT NULL, 
    pwd varchar(255) UNIQUE NOT NULL, 
    first_name varchar(255) NOT NULL, 
    surname varchar(255) NOT NULL, 
    phone_number varchar(30) NOT NULL,
    address_id INT, 
    document_id INT, 
    FOREIGN KEY (address_id) REFERENCES addresses(id) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (document_id) REFERENCES documents(id) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS vehicles (
    id SERIAL PRIMARY KEY,
    vin VARCHAR(17) UNIQUE NOT NULL,            
    make VARCHAR(50) NOT NULL,                  
    model VARCHAR(50) NOT NULL, 
    vehicle_type VARCHAR(255) NOT NULL,
    registration_number VARCHAR(30) NOT NULL,   
    technical_inspection_due_date VARCHAR, -- formatu 'YYYY-MM-DD'       
    production_year INT CHECK (production_year >= 1886), 
    fuel_type VARCHAR(50),
    first_side_homologation_doc VARCHAR(200),
    second_side_homologation_doc VARCHAR(200),
    body_style VARCHAR(100)
);

-- data rozpoczęcia oraz zakończenia własności samochodu przez uzytkownika 
-- będzie słuzyc głownie w kwestiach takich jak: sledzenie historii wlasciciela pojazdu, prowadzenie raportow 
-- (jak dlugo dany uzytkownik posiadał dany pojazd etc.), są to głównie informacje do dyspozycji urzędu komunikacji
-- (w przypadku rozszerzenia aplikacji),
--  ewentualnie do rozstrzygania spornych kwestii w stylu: do kogo nalezal dany pojazd, gdy zostal wystawiony mandat etc.

CREATE TABLE IF NOT EXISTS vehicles_users (
    id SERIAL PRIMARY KEY,
    vehicle_id INT NOT NULL,  
    user_id INT NOT NULL,    
    ownership_start_date DATE NOT NULL,  
    ownership_end_date DATE,  
    FOREIGN KEY (vehicle_id) REFERENCES vehicles(id) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TYPE status_enum AS ENUM ('oczekuje', 'zaakceptowano', 'odrzucono');

-- tabela forms została rozszerzona o kolumnę status typu status_enum

CREATE TABLE IF NOT EXISTS forms (
    id SERIAL PRIMARY KEY,
    form_date DATE NOT NULL,
    ex_owner_id INT NOT NULL,
    new_owner_id INT NOT NULL,
    form_vehicle_id INT NOT NULL,
    first_side_sale_agreement VARCHAR(200),
    second_side_sale_agreement VARCHAR(200),
    FOREIGN KEY (ex_owner_id) REFERENCES users(id) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (new_owner_id) REFERENCES users(id) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (form_vehicle_id) REFERENCES vehicles(id) ON DELETE CASCADE ON UPDATE CASCADE
);
